"""Project Euler: Problem 2: Even Fibonacci Numbers
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed n, find the sum of the even-valued terms.
"""
import sys
old = sys.getrecursionlimit()
sys.setrecursionlimit(10000)

class Test(object):
    @classmethod
    def assert_equals(self,actual,expected, text=''):
        print(actual, expected)
        if actual == expected:
            return print(f'pass')
        else:
            return print(f'fail {text}')

def fibonacci(n):
    a, b = 1, 0
    while a <= n:
        yield a
        a, b = a+b, a

def fiboEvenSum(n):
    return sum(i for i in fibonacci(n) if not i%2 )

Test.assert_equals(fiboEvenSum(10), 10)
Test.assert_equals(fiboEvenSum(60), 44)
Test.assert_equals(fiboEvenSum(1000), 798)
Test.assert_equals(fiboEvenSum(100000), 60696)
Test.assert_equals(fiboEvenSum(4000000), 4613732)